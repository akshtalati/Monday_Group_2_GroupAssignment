/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SalesAnalytics;

import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.ProductManagement.ProductSummary;
import model.ProductManagement.ProductsReport;
import model.Supplier.Supplier;
import model.UserAccountManagement.UserAccount;

/**
 *
 * @author varananavadiya
 */
public class SupplierAnalyticsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierAnalyticsJPanel
     */
    JPanel cardSequencePanel;
    Business business;
    UserAccount marketAnalyst;

    public SupplierAnalyticsJPanel(JPanel cardSequencePanel, Business business, UserAccount userAccount) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.marketAnalyst = userAccount;
                populateSupplierCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPanePerformanceReport = new javax.swing.JScrollPane();
        tblProductSummary = new javax.swing.JTable();
        labelOverperformingSol = new javax.swing.JLabel();
        cmbSupplier = new javax.swing.JComboBox<>();
        jLabelSupplier = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        tblProductSummary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "No of sales above target", "No of sales below target", "Product price performance", "Acutal sales volume"
            }
        ));
        jScrollPanePerformanceReport.setViewportView(tblProductSummary);

        labelOverperformingSol.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelOverperformingSol.setText("Performance Report");

        cmbSupplier.setMaximumRowCount(100);
        cmbSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierActionPerformed(evt);
            }
        });

        jLabelSupplier.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabelSupplier.setText("Supplier :");

        btnBack.setBackground(new java.awt.Color(51, 153, 255));
        btnBack.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelOverperformingSol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(395, 395, 395))
                            .addComponent(jScrollPanePerformanceReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSupplier)
                                .addGap(18, 18, 18)
                                .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSupplier))
                .addGap(18, 18, 18)
                .addComponent(labelOverperformingSol)
                .addGap(18, 18, 18)
                .addComponent(jScrollPanePerformanceReport, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierActionPerformed
        populateProductSummary();
    }//GEN-LAST:event_cmbSupplierActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<Supplier> cmbSupplier;
    private javax.swing.JLabel jLabelSupplier;
    private javax.swing.JScrollPane jScrollPanePerformanceReport;
    private javax.swing.JLabel labelOverperformingSol;
    private javax.swing.JTable tblProductSummary;
    // End of variables declaration//GEN-END:variables

    private void populateProductSummary() {
        Supplier supplier = (Supplier) cmbSupplier.getSelectedItem();
        if (supplier != null) {
            //populate the table
            DefaultTableModel model = (DefaultTableModel) tblProductSummary.getModel();
            model.setRowCount(0);
            ProductsReport pr = business.getSupplierPerformanceReport(String.valueOf(supplier));
            for (ProductSummary ps : pr.getProductSummaryList()) {
                Object[] row = new Object[5];
                row[0] = ps.getProductName();
                row[1] = ps.getNumberAboveTarget();
                row[2] = ps.getNumberBelowTarget();
                row[3] = ps.getProductPricePerformance();
                row[4] = ps.getSalesRevenues();
                model.addRow(row);
            }
        }
    }

    private void populateSupplierCombo() {
 cmbSupplier.removeAllItems();
        for (Supplier supplier : business.getSupplierDirectory().getSupplierList()) {
            cmbSupplier.addItem(supplier);
        }    }
}
